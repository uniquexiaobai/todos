{"version":3,"sources":["store.js","constants.js","Header.js","Main.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["WrappedComponent","initialState","nowShowing","todos","reducer","state","action","type","payload","console","log","Object","objectSpread","toConsumableArray","concat","map","todo","id","text","completed","filter","Context","createContext","Header","input","useRef","dispatch","useContext","_useState","useState","_useState2","slicedToArray","setText","useEffect","current","focus","react_default","a","createElement","className","ref","placeholder","value","onChange","e","target","onKeyDown","keyCode","trim","Date","now","TodoItem","_ref","editingInput","editingText","setEditingText","_useState3","_useState4","editing","setEditing","onDestroy","onBlur","name","classNames","checked","onDoubleClick","onClick","which","Main","_useContext","activeTodoCount","reduce","total","showTodos","length","Main_TodoItem","key","Footer","onToggleShowing","selected","withContext","src_Header","src_Main","src_Footer","_useReducer","useReducer","_useReducer2","Provider","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7d034ff8.chunk.js","sourcesContent":["import React, {createContext, useReducer} from 'react';\n\nimport {ALL_TODOS} from './constants';\n\nconst initialState = {\n    nowShowing: ALL_TODOS,\n    todos: [],\n};\n\nconst reducer = (state, action) => {\n    const {type, payload} = action;\n\n    console.log(type, payload);\n\n    switch (action.type) {\n        case 'create':\n            return {...state, todos: [...state.todos, payload]};\n        case 'update':\n            return {...state, todos: state.todos.map(todo => todo.id === payload.id ? {...todo, text: payload.text} : todo)};\n        case 'toggle':\n            return {...state, todos: state.todos.map(todo => todo.id === payload.id ? {...todo, completed: !todo.completed} : todo)};\n        case 'toggleAll':\n            return {...state, todos: state.todos.map(todo => ({...todo, completed: payload.completed}))};\n        case 'destroy':\n            return {...state, todos: state.todos.filter(todo => todo.id !== payload.id)};\n        case 'clearCompleted':\n            return {...state, todos: state.todos.filter(todo => !todo.completed)};\n        case 'toggleShowing':\n            return {...state, nowShowing: payload.nowShowing};\n        default:\n            return state;\n    }\n};\n\nexport const Context = createContext();\n\nexport const withContext = WrappedComponent => {\n    return () => {\n        const [state, dispatch] = useReducer(reducer, initialState);\n\n        return (\n            <Context.Provider value={{state, dispatch}}>\n                <WrappedComponent />\n            </Context.Provider>\n        );\n    };\n};\n","\nexport const ALL_TODOS = 'all';\nexport const ACTIVE_TODOS = 'active';\nexport const COMPLETED_TODOS = 'completed';\n\nexport const ENTER_KEY = 13;\n","import React, {useEffect, useRef, useState, useContext} from 'react';\n\nimport {Context} from './store';\n\nconst Header = () => {\n    const input = useRef(null);\n    const {dispatch} = useContext(Context);\n    const [text, setText] = useState('');\n\n    useEffect(() => {\n        input.current.focus();\n    });\n\n    const onChange = (e) => {\n        setText(e.target.value);\n    };\n\n    const onKeyDown = (e) => {\n        if (e.keyCode !== 13) return;\n\n        const value = text.trim();\n\n        if (value) {\n            const todo = {\n                id: Date.now(),\n                text: value,\n                completed: false,\n            };\n\n            dispatch({type: 'create', payload: todo});\n            setText('');\n        }\n    };\n\n    return (\n        <header className=\"header\">\n            <h1>todos</h1>\n            \n            <input\n                ref={input}\n                className=\"new-todo\"\n                placeholder=\"What needs to be done?\"\n                value={text}\n                onChange={onChange}\n                onKeyDown={onKeyDown}\n            />\n        </header>\n    );\n}\n\nexport default Header;\n","import React, {useContext, useState, useEffect, useRef} from 'react';\nimport classNames from 'classnames';\n\nimport {Context} from './store';\nimport {ACTIVE_TODOS, COMPLETED_TODOS} from './constants';\n\nconst Main = () => {\n    const {state, dispatch} = useContext(Context);\n    const {nowShowing, todos} = state;\n\n    const activeTodoCount = todos.reduce((total, todo) => todo.completed ? total : total + 1, 0);\n\n    const showTodos = todos.filter(todo => {\n        switch (nowShowing) {\n            case ACTIVE_TODOS:\n                return !todo.completed;\n            case COMPLETED_TODOS:\n                return todo.completed;\n            default:\n                return true; \n        }\n    });\n\n    const onToggleAll = (e) => {\n        const checked = e.target.checked;\n\n        dispatch({type: 'toggleAll', payload: {completed: checked}});\n    };\n\n    return (\n        todos.length ? (\n            <div className=\"main\">\n                <input className=\"toggle-all\" type=\"checkbox\" onChange={onToggleAll} checked={activeTodoCount === 0} />\n\n                <ul className=\"todo-list\">\n                    {\n                        showTodos.map(todo => (\n                            <TodoItem key={todo.id} todo={todo} />\n                        ))\n                    }\n                </ul>\n            </div>\n        ) : null\n    );\n};\n\nconst TodoItem = ({todo}) => {\n    const editingInput = useRef(null);\n    const {dispatch} = useContext(Context);\n    const [editingText, setEditingText] = useState(todo.text);\n    const [editing, setEditing] = useState(false);\n\n    useEffect(() => {\n        if (editing) {\n            editingInput.current.focus();\n        }\n    });\n\n    const onToggle = () => {\n        dispatch({type: 'toggle', payload: {id: todo.id}});\n    };\n\n    const onDestroy = () => {\n        dispatch({type: 'destroy', payload: {id: todo.id}});\n    };\n\n    const onEdit = () => {\n        setEditing(true);\n    };\n\n    const onChange = e => {\n        setEditingText(e.target.value);\n    };\n\n    const onBlur = () => {\n        const text = editingText.trim();\n\n        if (!text) {\n            onDestroy();\n        } else if (text !== todo.name) {\n            dispatch({type: 'update', payload: {\n                id: todo.id,\n                text: editingText\n            }});\n            setEditing(false);\n        }\n    };\n\n    const onKeyDown = (e) => {\n        if (e.which === 13) {\n            onBlur();\n        }\n    };\n\n    return (\n        <li className={\n            classNames({completed: todo.completed, editing: editing})\n        }>\n            <div className=\"view\">\n                <input \n                    className=\"toggle\"\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={onToggle}\n                />\n                <label onDoubleClick={onEdit}>{todo.text}</label>\n                <button className=\"destroy\" onClick={onDestroy} />\n            </div>\n\n            <input \n                ref={editingInput}\n                className=\"edit\"\n                value={editingText}\n                onChange={onChange}\n                onBlur={onBlur}\n                onKeyDown={onKeyDown}\n            />\n        </li>\n    );\n};\n\nexport default Main;\n","import React, {useContext} from 'react';\nimport classNames from 'classnames';\n\nimport {Context} from './store';\nimport {ALL_TODOS, ACTIVE_TODOS, COMPLETED_TODOS} from './constants';\n\nconst Footer = () => {\n    const {state, dispatch} = useContext(Context);\n    const {nowShowing, todos} = state;\n\n    const activeTodoCount = todos.reduce((total, todo) => todo.completed ? total : total + 1, 0);\n\n    const onToggleShowing = (nowShowing) => {\n        dispatch({type: 'toggleShowing', payload: {nowShowing: nowShowing}});\n    }\n\n    const onClearCompleted = () => {\n        dispatch({type: 'clearCompleted'});\n    };\n\n    return (\n        todos.length ? (\n            <footer className=\"footer\">\n                <span className=\"todo-count\">\n                    <strong>{activeTodoCount}</strong> item{activeTodoCount === 1 ? '' : 's'} left\n                </span>\n\n                <ul className=\"filters\">\n                    <li>\n                        <a \n                            onClick={() => onToggleShowing(ALL_TODOS)}\n                            className={classNames({selected: nowShowing === ALL_TODOS})}\n                        >All</a>\n                    </li>\n                    {' '}\n                    <li>\n                        <a \n                            onClick={() => onToggleShowing(ACTIVE_TODOS)}\n                            className={classNames({selected: nowShowing === ACTIVE_TODOS})}\n                        >Active</a>\n                    </li>\n                    {' '}\n                    <li>\n                        <a \n                            onClick={() => onToggleShowing(COMPLETED_TODOS)}\n                            className={classNames({selected: nowShowing === COMPLETED_TODOS})}\n                        >Completed</a>\n                    </li>\n                </ul>\n\n                <button className=\"clear-completed\" onClick={onClearCompleted}>\n                    Clear completed\n                </button>\n            </footer>\n        ) : null\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nimport {withContext} from './store';\n\nconst App = () => (\n    <div className=\"todoapp\">\n        <Header />\n        <Main />\n        <Footer />\n    </div>\n);\n\nexport default withContext(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}